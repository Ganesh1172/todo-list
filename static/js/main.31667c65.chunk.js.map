{"version":3,"sources":["components/Note.js","App.js","index.js"],"names":["Note","className","onClick","this","props","deleteMethod","text","Component","App","handleKeyPress","event","key","state","notes","push","noteText","setState","target","value","textInput","focus","index","notesArr","splice","map","val","deleteNote","addNote","bind","type","ref","input","onChange","updateNoteText","onKeyPress","ReactDOM","render","document","getElementById"],"mappings":"yMAEqBA,E,uKAEjB,OACE,yBAAKC,UAAU,OAAOC,QAASC,KAAKC,MAAMC,cACvCF,KAAKC,MAAME,U,GAJcC,aCEbC,G,wDACnB,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAoBRK,eAAiB,SAACC,GACE,UAAdA,EAAMC,MACO,EAAKC,MAAMC,MACjBC,KAAK,EAAKF,MAAMG,UACzB,EAAKC,SAAS,CAAED,SAAU,OAvB5B,EAAKH,MAAQ,CACXG,SAAU,GACVF,MAAO,IAJQ,E,2DAQJE,GACbZ,KAAKa,SAAS,CAAED,SAAUA,EAASE,OAAOC,U,gCAId,KAAxBf,KAAKS,MAAMG,WAGAZ,KAAKS,MAAMC,MACjBC,KAAKX,KAAKS,MAAMG,UACzBZ,KAAKa,SAAS,CAAED,SAAU,KAC1BZ,KAAKgB,UAAUC,W,iCAUNC,GACT,IAAIC,EAAWnB,KAAKS,MAAMC,MAC1BS,EAASC,OAAOF,EAAO,GACvBlB,KAAKa,SAAS,CAAEH,MAAOS,M,+BAEf,IAAD,OACHT,EAAQV,KAAKS,MAAMC,MAAMW,KAAI,SAACC,EAAKd,GACrC,OACE,kBAAC,EAAD,CAAMA,IAAKA,EAAKL,KAAMmB,EAAKpB,aAAc,kBAAM,EAAKqB,WAAWf,SAGnE,OACE,yBAAKV,UAAU,aACb,yBAAKA,UAAU,UAAf,0BACCY,EACD,yBAAKZ,UAAU,MAAMC,QAASC,KAAKwB,QAAQC,KAAKzB,OAAhD,KAGA,2BACE0B,KAAK,OACLC,IAAK,SAACC,GACJ,EAAKZ,UAAYY,GAEnB9B,UAAU,YACViB,MAAOf,KAAKS,MAAMG,SAClBiB,SAAU,SAACjB,GAAD,OAAc,EAAKkB,eAAelB,IAC5CmB,WAAY/B,KAAKM,eAAemB,KAAKzB,a,GAxDdI,cCAjC4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.31667c65.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Note extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"note\" onClick={this.props.deleteMethod}>\r\n        {this.props.text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport \"./style.css\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      noteText: \"\",\r\n      notes: [],\r\n    };\r\n  }\r\n\r\n  updateNoteText(noteText) {\r\n    this.setState({ noteText: noteText.target.value });\r\n  }\r\n\r\n  addNote() {\r\n    if (this.state.noteText === \"\") {\r\n      return;\r\n    }\r\n    let notesArr = this.state.notes;\r\n    notesArr.push(this.state.noteText);\r\n    this.setState({ noteText: \"\" });\r\n    this.textInput.focus();\r\n  }\r\n  handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      let notesArr = this.state.notes;\r\n      notesArr.push(this.state.noteText);\r\n      this.setState({ noteText: \"\" });\r\n    }\r\n  };\r\n\r\n  deleteNote(index) {\r\n    let notesArr = this.state.notes;\r\n    notesArr.splice(index, 1);\r\n    this.setState({ notes: notesArr });\r\n  }\r\n  render() {\r\n    let notes = this.state.notes.map((val, key) => {\r\n      return (\r\n        <Note key={key} text={val} deleteMethod={() => this.deleteNote(key)} />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"header\">React Todo Application</div>\r\n        {notes}\r\n        <div className=\"btn\" onClick={this.addNote.bind(this)}>\r\n          +\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          ref={(input) => {\r\n            this.textInput = input;\r\n          }}\r\n          className=\"textInput\"\r\n          value={this.state.noteText}\r\n          onChange={(noteText) => this.updateNoteText(noteText)}\r\n          onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}